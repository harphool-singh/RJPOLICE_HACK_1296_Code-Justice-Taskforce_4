\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\‚Äç
//...A INTRO OF PYTHON PROGRAM FOR PROBLEM 1 ...//
 
  //... Sample Python code for a basic FIR analysis app .../////
  
 CODE :-

   [   import spacy  # For natural language processing
      from sklearn.externals import joblib  # For loading machine learning models

# Load the NLP model
nlp = spacy.load("en_core_web_sm")

# Load the machine learning models
act_model = joblib.load("act_model.pkl")  # Replace with the actual path to your model file
section_model = joblib.load("section_model.pkl")  # Replace with the actual path to your model file

def analyze_fir(text):
    # Tokenize and process the FIR text using spaCy
    doc = nlp(text)

    # Extract entities and acts using the NLP model
    acts = [ent.text for ent in doc.ents if ent.label_ == "ACT"]
    
    # Predict sections using the section recognition model
    sections = section_model.predict([text])

    return acts, sections

def main():
    # Sample FIR text
    fir_text = """
    On January 1, 2023, the suspect was involved in a theft, violating Section 379 of the Indian Penal Code.
    """

    # Analyze the FIR text
    acts, sections = analyze_fir(fir_text)

    # Display the results
    print("Identified Acts:", acts)
    print("Recognized Sections:", sections)

if __name__ == "__main__":
    main()                            ]


CODE 1 SAMPLE COMPLETE


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// ...FOR PROBLEM 2 A SAMPLE OF CODES FOR DEVELOPING WEBSITE ...//

 SOLUTION :-
 Prerequisites:
 1 . Install Flask:

 [[    bash
pip install Flask  ]]


 2.  Create a new directory for your project and navigate into it.   

  3 .  Create a new Python file (e.g., app.py) and HTML templates (e.g., in a folder named templates).

app.py (Flask Application):
python

  [[[ from flask import Flask, render_template, request

app = Flask(__name__)

# Mock machine learning model (replace with actual implementation)
def predict_punishment(act, section):
    # This is a placeholder; you need a trained model for accurate predictions
    return "Prediction: Fine of $500 and 3 months imprisonment."

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/process_query', methods=['POST'])
def process_query():
    query = request.form['query']

    # Placeholder: Perform Natural Language Understanding (replace with actual implementation)
    act, section = "Theft", "Section 379"

    # Placeholder: Call machine learning model to predict punishment
    punishment_prediction = predict_punishment(act, section)

    return render_template('result.html', act=act, section=section, punishment=punishment_prediction)

if __name__ == '__main__':
    app.run(debug=True)   ]]]


templates/index.html (User Input Page):


html

  [[[[  <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Legal Advisor</title>
</head>
<body>
    <h1>Welcome to AI Legal Advisor</h1>
    <form action="/process_query" method="post">
        <label for="query">Enter your legal query:</label>
        <input type="text" name="query" id="query" required>
        <button type="submit">Submit Query</button>
    </form>
</body>
</html>  ]]]]


templates/result.html (Result Display Page):


html


[[[[[  <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Legal Advisor - Result</title>
</head>
<body>
    <h1>AI Legal Advisor - Result</h1>
    <p>Identified Act: {{ act }}</p>
    <p>Identified Section: {{ section }}</p>
    <p>Predicted Punishment: {{ punishment }}</p>
</body>
</html>  ]]]]]


Running the Application:
1. Save the above code {CODE ARE IN BRACKETS LIKE [.],[[...]],[[[...]]],[[[[[...]]]]],ETC CODE ARE JAVA, HTML } in the respective files (app.py, index.html, and result.html).
2. Open a terminal, navigate to the project directory, and run:

bash

python app.py


3. Open your web browser and go to http://127.0.0.1:5000/.


This is a basic example, and in a real-world scenario, you would replace the mock machine learning model with a trained one, implement a more sophisticated natural language processing system, and handle user feedback and repository updates using a database. Additionally, you may want to add styling and improve the overall user interface. 


